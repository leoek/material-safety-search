swagger: "2.0"
info:
  title: "MSDS Search API"
  version: 1.0.0
  description: "MSDS by Adrian Fichtner, Leonard Krause, Salomo Pflugradt, David Reinartz @ Universit√§t Leipzig, 2018"
  termsOfService: http://localhost:8080/terms
  contact:
    email: lek@outlook.de
  license:
    name: "License"
    url: http://localhost/licenses
host: localhost:8080
basePath: /
tags:
- name: "API"
  description: "Information about the API"
- name: "Search"
  description: "Main search endpoint"
- name: "Logging"
  description: "Logging endpoint"
schemes:
- http
paths:
  /api:
    get:
      tags:
      - API
      summary: "Get Information about the API"
      description: "API information is not available at the moment"
      operationId: api
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: "Successful operation"
        400:
          description: "API is currently unavailable"
          schema:
            $ref: '#/definitions/ApiInfo'
  /search:
    get:
      tags:
      - Search
      summary: "Retrieve search results for a given search term. Supports paging and sorting."
      description: ""
      operationId: search
      produces:
      - application/json
      parameters:
      - in: query
        name: s
        type: string
        description: "Search term"
        required: true
      - in: query
        name: page
        type: string
        description: "Number of page"
        required: false
      - in: query
        name: size
        type: string
        description: "Number of items per page"
        required: false
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Results"
        400:
          description: "Page out of range"
  /log:
    put:
      tags:
      - Logging
      summary: "Send logging data here"
      description: "Endpoint for collecting user behaviour data. Everything sent here is automatically added to the logging database."
      operationId: addLog
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: "Log object to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Log"
      responses:
        200:
          description: "Successful operation"
definitions:
  DataSheetDocument:
    type: object
    description: Values are \"null\" if information is not on MSDS
    properties:
      score:
        type: number
        description: "Score of the retrieved document in context of given search term"
      docType:
        type: string
        description: "Marks that object is a datasheet, thus value will always be \"datasheet\""
      productId:
        type: string
        description: "Product name"
      fsc:
        type: string
        description: "Federal Supply Class"
      niin:
        type: string
        description: "National Item Identification Number"
      companyName:
        type: string
        description: "Name of the responsible party"
      msdsDate:
        type: string
        description: "MSDS date"
      ingredients:
        type: array
        description: "Product composition"
        items:
          $ref: "#/definitions/IngredientDocument"
      rawIdentification:
        type: string
        description: "Raw text for category \"Product Identification\""
      rawComposition:
        type: string
        description: "Raw text for category \"Composition/Information on Ingredients\""
      rawHazards:
        type: string
        description: "Raw text for category \"Hazards Identification\""
      rawFirstaid:
        type: string
        description: "Raw text for category \"First Aid Measures\""
      rawFireFighting:
        type: string
        description: "Raw text for category \"Fire Fighting Measures\""
      rawAccidentalRelease:
        type: string
        description: "Raw text for category \"Accidental Release Measures\""
      rawHandlingStorage:
        type: string
        description: "Raw text for category \"Handling and Storage\""
      rawProtection:
        type: string
        description: "Raw text for category \"Exposure Controls/Personal Protection\""
      rawChemicalProperties:
        type: string
        description: "Raw text for category \"Physical/Chemical Properties\""
      rawStabilityReactivity:
        type: string
        description: "Raw text for category \"Stability and Reactivity Data\""
      rawDisposal:
        type: string
        description: "Raw text for category \"Disposal Considerations\""
      rawToxic:
        type: string
        description: "Raw text for category \"Toxicological Information\""
      rawEco:
        type: string
        description: "Raw text for category \"Ecological Information\""
      rawTransport:
        type: string
        description: "Raw text for category \"MSDS Transport Information\""
      rawRegulatory:
        type: string
        description: "Raw text for category \"Regulatory Information\""
      rawOther:
        type: string
        description: "Raw text for category \"Other Information\""
  IngredientDocument:
    type: object
    properties:
      docType:
        type: string
        description: "Marks that object is an ingredient, thus value will always be \"ingredient\""
      ingredName:
        type: string
        description: "Ingredient name"
      cas:
        type: string
        description: "Chemical Abstracts Service Registry Number"
  Meta:
    type: object
    properties:
      totalCount:
        type: integer
        description: "Total number of retrieved documents"
      pageSize:
        type: integer
        description: "Number of documents per page"
      count:
        type: integer
        description: "No Information available"
      page:
        type: integer
        description: "Current page number"
      hasNext:
        type: boolean
        description: "\"True\" if next page exists, \"False\" otherwise"
      totalPages:
        type: integer
        description: "Total number of pages"
  Results:
    type: object
    properties:
      items:
        type: array
        description: "List of retrieved datasheets"
        items:
          $ref: "#/definitions/DataSheetDocument"
      meta:
        $ref: "#/definitions/Meta"
  Log:
    type: object
    properties:
      searchTerm:
        type: string
        description: "Search term"
      timestamp:
        type: string
        description: "Timestamp of the search"
      ipAddress:
        type: string
        description: "Users IP address"
      dwellTime:
        type: number
        description: "Amount of time a user spends on a retrieved document. Should be \"null\" if user does not return to search page."
      resultClicks:
        type: integer
        description: "Number of documents user clicks on"
      anyResults:
        type: boolean
        description: "\"True\" if search returns one ore more results, \"False\" if search returns no results"
  ApiInfo:
    type: object
    properties:
      info:
        type: string
        description: API Info
